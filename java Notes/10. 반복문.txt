1. 의미
    1) 어떤 조건이 성립되는 동안 반복 처리를 실행하는 제어문임.
    2)  for문을 이용한 반복
        while문을 이용한 반복
        do~while문을 이용한 반복
    
2. for 문
    1) for 문의 수행 순서
    
        for (초기화식; 조건식; 증감식) {
            수행문;
            .....
        }
        1-초기화식 > 2- 조건식 > 3- 수행문 > 4- 증감식 > 5- 조건식>수행문>증감식... > 조건식을 만족하지 않을 때까지

            - 첫번째 루프의 흐름
                - 1 => 2 => 3 => 4 
            - 두번재 루프의 흐흠
                - 2 => 3 => 4 
            - 세번재 루프의 흐흠
                - 2 => 3 => 4 
    
    2) for 문 요소의 생략, 응용
          for 문의 문장들은 생략 가능함
		 *  1) 초기화식 생략
		 *  	- 이미 이전에 값이 초기화 되어 for 문 내부에서 값을 지정할 필요가 없는 경우
		 *  2) 조건식 생략
		 *  	- 반복 수행에 대한 조건이 수행문 내부에 있는 경우 ex) if/ break
		 *  3) 증감식 생략
		 *  	- 증감식에 대한 연산이 복잡하거나 다른 변수의 연산 결과값에 결정되는 경우
		 *  4) 모두 생략시 무한반복
		 *  	- 무한반복을 종료하는 조건을 넣어주어야 함

    3) 중첩 반복문
        - 반복문이 여러 번 포개진 중첩 반복
        - 반복문 내부에 또 다른 반복문이 있음.
        - 여러 겹으로 반복문을 겨쳐서 구현 가능
        - 외부 반복문과 내부 반복문 간의 변수 값 변화에 유의하여 구현해야 함.
        - ex) 구구단


3. break문, continue문
	1)break문
		- 중간에 멈춤
		- 감싸고 있는 제어문의 블록을 빠져 나오는 기능
		- 반복문에서 
			- 주로 조건문(if)과 같이 사용
			- 조건에 해당되는 경우 반복 수행을 멈추고 
			- 반복문 외부로 수행이 이동.
			
			- 중첩 반복문에서는 break문이 포함된 반복문만 빠져나옴.

	2) continue문
		- 반복문 내부에서 조건문(if)과 같이 사용하며,
		- 조건을 만족하는 경우 (true)
			- 이후 반복문 블럭 내부의 다른 수행문들을 미수행함.

4. while문
	1) 주어진 조건이 참(true)인 동안 수행문을 반복수행하는 제어문.
	2) 조건이 만족하지 않으면 반복하던 수행을 멈춤.
	3) 예
		- 달리는 자동차 /( 엑셀/브레이크 )
		- 회전하는 나사못 /( 나사의 홈 갯수 )
		- 특정 온도까지 가동되는 에어컨 /( 희망온도에 따른 온도 조절 )
	4) 
		while(조건식) {
			수행문1;
			...
		}
		수행문2;

5. do~while 문
	1) 조건과 상관없이 한번은 수행문을 수행
	2) 조건과 상관없이 수행을 한번 하고나서 조건을 체크함.
	3) 
		do {
			수행문1;
			...
		} while(조건식); 
		수행문2;
		...






